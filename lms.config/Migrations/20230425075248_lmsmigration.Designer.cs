// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lms.config.LMSContext;

#nullable disable

namespace lms.config.Migrations
{
    [DbContext(typeof(LMSDbContext))]
    [Migration("20230425075248_lmsmigration")]
    partial class lmsmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lms.config.Entities.ClassifiedLead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("LeadId")
                        .HasColumnType("bigint")
                        .HasColumnName("lead_id");

                    b.Property<string>("LeadType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("lead_type");

                    b.Property<string>("Probability")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("probability");

                    b.HasKey("Id")
                        .HasName("PK__classifi__3213E83F9C35887E");

                    b.HasIndex("LeadId");

                    b.ToTable("classified_leads");
                });

            modelBuilder.Entity("lms.config.Entities.CrmPushLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("LeadId")
                        .HasColumnType("bigint")
                        .HasColumnName("lead_id");

                    b.Property<string>("Payload")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("Response")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("response");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__crm_push__3213E83FC10B6361");

                    b.HasIndex("LeadId");

                    b.ToTable("crm_push_logs");
                });

            modelBuilder.Entity("lms.config.Entities.DealerMasterList", b =>
                {
                    b.Property<double?>("BranchId")
                        .HasColumnType("float")
                        .HasColumnName("branch_id");

                    b.Property<string>("DealerAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_address");

                    b.Property<string>("DealerAlternateEmailid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_alternate_emailid");

                    b.Property<string>("DealerAlternateMobileNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_alternate_mobile_no");

                    b.Property<string>("DealerAmEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_am_email");

                    b.Property<string>("DealerAmName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_am_name");

                    b.Property<string>("DealerArea")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_area");

                    b.Property<string>("DealerArea2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_area_2");

                    b.Property<double?>("DealerCode")
                        .HasColumnType("float")
                        .HasColumnName("dealer_code");

                    b.Property<string>("DealerEmailid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_emailid");

                    b.Property<string>("DealerIsmEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_ism_email");

                    b.Property<string>("DealerIsmName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_ism_name");

                    b.Property<string>("DealerLeadCity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_lead_city");

                    b.Property<string>("DealerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_name");

                    b.Property<double?>("DealerNewSpocNumbers")
                        .HasColumnType("float")
                        .HasColumnName("dealer_new_spoc_numbers");

                    b.Property<string>("DealerNsmEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_nsm_email");

                    b.Property<string>("DealerNsmName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_nsm_name");

                    b.Property<double?>("DealerPincode")
                        .HasColumnType("float")
                        .HasColumnName("dealer_pincode");

                    b.Property<string>("DealerSpocName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_spoc_name");

                    b.Property<string>("DealerState")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_state");

                    b.Property<string>("DealerTerritory")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_territory");

                    b.Property<string>("DealerTmEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_tm_email");

                    b.Property<string>("DealerTmName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_tm_name");

                    b.Property<string>("DealerTown")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_town");

                    b.Property<string>("DealerType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_type");

                    b.Property<string>("DealerZonalPlannerEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_zonal_planner_email");

                    b.Property<string>("DealerZonalPlannerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_zonal_planner_name");

                    b.Property<string>("DealerZone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dealer_zone");

                    b.Property<double?>("ThresholdCount")
                        .HasColumnType("float")
                        .HasColumnName("threshold_count");

                    b.ToTable("DealerMasterList");
                });

            modelBuilder.Entity("lms.config.Entities.DealerMediationControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DealerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dealer_id");

                    b.Property<int?>("MaxCount")
                        .HasColumnType("int")
                        .HasColumnName("max_count");

                    b.Property<int?>("PushedCount")
                        .HasColumnType("int")
                        .HasColumnName("pushed_count");

                    b.HasKey("Id")
                        .HasName("PK__dealer_m__3213E83F801D71AE");

                    b.ToTable("dealer_mediation_controls");
                });

            modelBuilder.Entity("lms.config.Entities.DmsPushLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DealerId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dealer_id");

                    b.Property<string>("InternetEnquiryId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("internet_enquiry_id");

                    b.Property<long>("LeadId")
                        .HasColumnType("bigint")
                        .HasColumnName("lead_id");

                    b.Property<string>("Payload")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("Response")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("response");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__dms_push__3213E83F9AD0678A");

                    b.HasIndex("LeadId");

                    b.ToTable("dms_push_logs");
                });

            modelBuilder.Entity("lms.config.Entities.EmsPushLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("InternetEnquiryId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("internet_enquiry_id");

                    b.Property<long>("LeadId")
                        .HasColumnType("bigint")
                        .HasColumnName("lead_id");

                    b.Property<string>("Payload")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("Response")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("response");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__ems_push__3213E83F57A30780");

                    b.HasIndex("LeadId");

                    b.ToTable("ems_push_logs");
                });

            modelBuilder.Entity("lms.config.Entities.ErrorLead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ErrorDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("error_description");

                    b.Property<long>("LeadLogId")
                        .HasColumnType("bigint")
                        .HasColumnName("lead_log_id");

                    b.HasKey("Id")
                        .HasName("PK__error_le__3213E83FBAF616AE");

                    b.HasIndex("LeadLogId");

                    b.ToTable("error_leads");
                });

            modelBuilder.Entity("lms.config.Entities.FinancePushLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FinancePartner")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("finance_partner");

                    b.Property<long>("LeadId")
                        .HasColumnType("bigint")
                        .HasColumnName("lead_id");

                    b.Property<string>("Response")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("response");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__finance___3213E83F209B10A6");

                    b.HasIndex("LeadId");

                    b.ToTable("finance_push_logs");
                });

            modelBuilder.Entity("lms.config.Entities.Lead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AgencyCode")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("agency_code");

                    b.Property<string>("DealerId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dealer_id");

                    b.Property<bool>("IsEmsDealer")
                        .HasColumnType("bit")
                        .HasColumnName("is_ems_dealer");

                    b.Property<bool>("IsFinance")
                        .HasColumnType("bit")
                        .HasColumnName("is_finance");

                    b.Property<long>("LeadLogId")
                        .HasColumnType("bigint")
                        .HasColumnName("lead_log_id");

                    b.Property<string>("ModelId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("model_id");

                    b.Property<string>("PartId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("part_id");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit")
                        .HasColumnName("processed");

                    b.HasKey("Id")
                        .HasName("PK__leads__3213E83F2C242269");

                    b.HasIndex("LeadLogId");

                    b.ToTable("leads");
                });

            modelBuilder.Entity("lms.config.Entities.LeadLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Error")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("error")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LeadSource")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lead_source");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit")
                        .HasColumnName("processed");

                    b.Property<string>("Request")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("request");

                    b.HasKey("Id")
                        .HasName("PK_id_lead_logs");

                    b.ToTable("lead_logs");
                });

            modelBuilder.Entity("lms.config.Entities.ClassifiedLead", b =>
                {
                    b.HasOne("lms.config.Entities.Lead", "Lead")
                        .WithMany("ClassifiedLeads")
                        .HasForeignKey("LeadId")
                        .IsRequired()
                        .HasConstraintName("FK__classifie__lead___4CA06362");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("lms.config.Entities.CrmPushLog", b =>
                {
                    b.HasOne("lms.config.Entities.Lead", "Lead")
                        .WithMany("CrmPushLogs")
                        .HasForeignKey("LeadId")
                        .IsRequired()
                        .HasConstraintName("FK__crm_push___lead___60A75C0F");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("lms.config.Entities.DmsPushLog", b =>
                {
                    b.HasOne("lms.config.Entities.Lead", "Lead")
                        .WithMany("DmsPushLogs")
                        .HasForeignKey("LeadId")
                        .IsRequired()
                        .HasConstraintName("FK__dms_push___lead___5BE2A6F2");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("lms.config.Entities.EmsPushLog", b =>
                {
                    b.HasOne("lms.config.Entities.Lead", "Lead")
                        .WithMany("EmsPushLogs")
                        .HasForeignKey("LeadId")
                        .IsRequired()
                        .HasConstraintName("FK__ems_push___lead___571DF1D5");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("lms.config.Entities.ErrorLead", b =>
                {
                    b.HasOne("lms.config.Entities.LeadLog", "LeadLog")
                        .WithMany("ErrorLeads")
                        .HasForeignKey("LeadLogId")
                        .IsRequired()
                        .HasConstraintName("FK__error_lea__lead___3C69FB99");

                    b.Navigation("LeadLog");
                });

            modelBuilder.Entity("lms.config.Entities.FinancePushLog", b =>
                {
                    b.HasOne("lms.config.Entities.Lead", "Lead")
                        .WithMany("FinancePushLogs")
                        .HasForeignKey("LeadId")
                        .IsRequired()
                        .HasConstraintName("FK__finance_p__lead___52593CB8");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("lms.config.Entities.Lead", b =>
                {
                    b.HasOne("lms.config.Entities.LeadLog", "LeadLog")
                        .WithMany("Leads")
                        .HasForeignKey("LeadLogId")
                        .IsRequired()
                        .HasConstraintName("FK__leads__lead_log___403A8C7D");

                    b.Navigation("LeadLog");
                });

            modelBuilder.Entity("lms.config.Entities.Lead", b =>
                {
                    b.Navigation("ClassifiedLeads");

                    b.Navigation("CrmPushLogs");

                    b.Navigation("DmsPushLogs");

                    b.Navigation("EmsPushLogs");

                    b.Navigation("FinancePushLogs");
                });

            modelBuilder.Entity("lms.config.Entities.LeadLog", b =>
                {
                    b.Navigation("ErrorLeads");

                    b.Navigation("Leads");
                });
#pragma warning restore 612, 618
        }
    }
}
